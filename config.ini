// This is the configuration file for mouseevent4d
// Its arranged under a view keys.
// This file is ment to be parsed via inireader.e routines


// This section assignes the keypad keys to actions.
// All of them are  named after their functions, with
// the exception of WHEELPLUS, And WHEELMINUS
// Which corspond to moving the mouse wheel away from the user
// and to the user

[MOUSEEVENT_ACTIONS]
QUIT=VK_NUMPAD1
MOVE_UP=VK_NUMPAD8
MOVE_DOWN=VK_NUMPAD5
MOVE_LEFT=VK_NUMPAD4
MOVE_RIGHT=VK_NUMPAD6
LEFTCLICK=VK_NUMPAD7
RIGHTCLICK=VK_NUMPAD9
WHEELPLUS=VK_NUMPAD3
WHEELMINUS=VK_NUMPAD2

// This controls how mouseevent4c handles input.
[MOUSEEVENT_INPUT]
// This variable is how many mickies / pixels that
// each move event will move the mouse
MOUSE_MOVE_CLICKS=4

// To control how quickly move events are generates these values are used.

//  If a variable accositated with the move direction is greater
// Than MOUSE_MOVE_OVERFLOW - a move event is generated.
MOUSE_MOVE_OVERFLOW=50

// Initial value of the variables accositeatedw with the movement.
// Is reset to this value after is increates to greater than MOUSE_MOVE-
// _OVERFLOW
MOUSE_MOVE_OVERFLOW_START=0

// Each time a key for a direction is pressed, the direction accoesitated
// var for the direction is increated by MOUSE_MOVE_OVERFLOW_INC
MOUSE_MOVE_OVERFLOW_INC=51

// When a shift is is held down - each movement instance is multiplyed
// by this value.
// Ex. MOUSE_MOVE_CLICKS = 5. Hold shift then press direction key and
// it moves 20 pixels at a step (5*4) = 20
SHIFT_MUL=4

// shift multipler style
// choices are 0,1,NORMAL, HALO_ZOOM_STYLE
SHIFT_MUL_STYLE=HALO_ZOOM_STYLE
// controls how the crusor movement is generated
// either relative movement or absolute movement
// relative movement is subject to the system (Windows NT (this includes XP)) multiplying
// the movement by 2 and up to 4 times on certain conditions
// absolute movement is not subject to this
// note: in absolute movement, MouseEvent4c centers the cursor on startup (and whenever
// the config file is reloaded and specifies to use Absolute mode)

// choices are
// MOUSE_ABS or 2- use absolute mode
// MOUSE_REL or 1 - use original / relative mode
// DEFAULT or 0- if a mouse is detected then its in MOUSE_REL mode and if no mouse is
// detected MOUSE_ABS mode
MOUSE_MOVE_MODE=MOUSE_ABS

// for fun I also added a play halo zoom in sound for zooming and
// and a halo zoom out sound when zooming out
// because this adds some extra resource and memory requirements i've added
// an option to turn this on or off. Default is off.
HALO_ZOOM_SOUND=TRUE
// when enabled - this caps the movement of the cursor to values below
// the numbers that would cause Windows to multiply cursor movement
// this is used only in relative mode

// choices are
// ON or TRUE or 1 - cap the cursor speed
// OFF or FALSE or 0 - cursor speed is not capped
SPEED_CAP=OFF


// because of the differences I've observed between relative 
// and absolute speeds (by choosing values like values 100 for 
// absolute and 5 or relative) this option has been added.
// While in absolute mode all movement (including movent multiplied because of
// the shift button) is to be multipled by this value
MOUSE_ABS_MUL=20


[PROCESS]
// Control how much times in the CPU is allocated to mouseevent4d
// Choices are:
// IDLE_PRIORITY_CLASS = screensaver status (a fullscreen game
//			will proably spin the CPU cause a delay in
//			responce time.
// NORMAL_PRIORITY_CLASS = Average Joe Program
// HIGH_PRIORITY_CLASS = Same priority as the system programs
// REALTIME_PRIORITY_CLASS = This process is to be executed at all
//			 costs, including skipping required system
//			 programs.

PROCESS_PRIORITY=REALTIME_PRIORITY_CLASS
// block (most) keypad key messages from going to GUI windows (TRUE)
// or do not (FALSE)
INSTALL_KEYPAD_BLOCKER=TRUE
// hide the console (the little black window) when running (TRUE)
// or not (FALSE)
RELEASE_CONSOLE=TRUE
// The main program is a loop. Specifiy how many milliseconds
// The loop is to sleep after going through once.
STEP_SLEEP=1

[ERRORS]
// FILE to log errors and warnings too.
LOGFILE="error.log"
// log errors to LOGFILE (true) or not (false)
LOGERRORS=TRUE
// log warnings to LOGFILE (TRUE) or not (FALSE)
LOGWARNINGS=FALSE
// choices are: SILENT or SHOW_NO_MESSAGES - no messages
// SHOW_ONLY_ERRORS
// SHOW_ERRORS_ND_WARNINGS
// SHOW_ONLYWARNIGS
// SHOW_ALL 
MESSAGES=SILENT
